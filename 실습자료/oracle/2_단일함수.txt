-- ------------------------------------------------
-- ROWNUM
  쿼리의 결과로 나오는 각각의 행들에 대한 순서 값을 나타내는 의사 컬럼(가상 컬럼)
  ORDER BY 절이 있는 SELECT 문에서 사용하지 말것
  ROWNUM < 숫자 : 가능
  ROWNUM <= 숫자 : 가능
  ROWNUM > 숫자 : 불가능
  ROWNUM = 1 : 가능
  ROWNUM = 2 : 불가능


-- ------------------------------------------------
-- DECODE
   DECODE(a, 'b', 1, 2) : a라는 항목 값이 'b'와 같다면 1, 같지 않으면 2를 반환.
   DECODE(a, 'b', 1) : a라는 항목 값이 'b'와 같다면 1, 같지 않으면 null을 반환.
   DECODE(a, 'b', 1, 'c', 2, 3) : a라는 항목 값이 'b'와 같다면 1, 'c'와 같다면 2, 같지 않으면 3을 반환.

-- CASE : 조건에 따라 다른 결과를 반환
  -- 형식 1
    CASE 수식
        WHEN 값1 THEN return_expr
        WHEN 값2 THEN return_expr 
        [ ELSE else_expr ]
    END [ AS column_alias ]

  -- 형식 2
    CASE 
        WHEN comparison_expr THEN return_expr
        [ WHEN comparison_expr THEN return_expr ] 
        [ ELSE else_expr ]
    END [ AS column_alias ]


-- ------------------------------------------------
-- 수학 함수
   ROUND(n [,m]) : 반올림
   TRUNC(n [,m]) : 절삭
   MOD(m, n) : m을 n으로 나눈 나머지
   

-- ------------------------------------------------
-- 문자 함수
   LOWER (char) : 모든 영문자를 소문자로 변환하여 반환
   UPPER (char) : 모든 영문자를 대문자로 변환하여 반환
   LENGTH (char) : char의 길이를 반환
   INSTR (column | expression, 'string' [,m] [,n])
        문자의 위치를 반환. m값은 시작위치고, n값은 발생 횟수이며 m과 n의 기본 값은 1이다.
        문자가 없으면 0을 반환
   SUBSTR (char, m [,n])
        지정된 위치(m)에서 지정된 길이(n)만큼의 문자열을 추출
   LTRIM(char [,set])
   RTRIM(char [,set])
        char의 왼쪽(오른쪽) 에서 set에 포함 된 모든 문자를 제거. set을 지정하지 않으면 기본값은 단일 공백.
   TRIM (leading | trailing | both trim_character FROM trim_source)
        문자열의 앞, 뒤, 또는 앞뒤에서 공백 문자를 제거
   LPAD (column | expression, n, ['string'])
   RPAD(column | expression, n, ['string'])
        expression의 문자열을 제외한 공간에 문자열을 왼쪽(오른쪽)에 채운다.
   REPLACE (char, search_string [, replacement_string])
        char에서 모든 search_string를 replacement_string로 치환 된 char을 반환


-- ------------------------------------------------
-- 날짜
-- 날짜연산 
  날짜 + 숫자 : 숫자 만큼의 일수를 날자에 더함.
  날짜 - 숫자 : 숫자 만큼의 일수를 날짜에서 뺌.
  날짜 + 숫자/24 : 숫자 만큼의 시간을 날짜에 더함.
  날짜 + 숫자/24/60 : 숫자 만큼의 분을 날짜에 더함.
  날짜1 - 날짜2 : 두 날짜 사이의 일수.

-- INTERVAL : 날짜 가감
   SELECT  SYSDATE + ( INTERVAL '1' YEAR ) FROM dual;

-- 날짜함수 
   SYSDATE
       시스템에 저장된 현재 날짜를 반환
   SYSTIMESTAMP
       시스템의 밀리초(millisecond, ms) 및 시간대를 포함한 시스템 날짜를 반환
   ADD_MONTHS(d, n)
       해당 날짜에 n만큼의 달수를 더한다.
   MONTHS_BETWEEN(d1, d2)
       정의된 두 날짜사이의 차이(d1 - d2)를 월로 돌려준다.
   NEXT_DAY(d, char)
       명시된 요일(char)이 돌아오는 날짜를 계산. 요일은 숫자로 표현 가능(SUNDAY : 1, MONDAY : 2, ...)
   LAST_DAY(date)
       날짜 date에 포함된 월의 마지막 일자를 반환
   ROUND(date [, fmt ])
       fmt에 지정된 단위로 날짜를 반올림
   TRUNC(date [, fmt ])
       fmt에 지정된 단위로 날짜를 반내림
   EXTRACT( { YEAR | MONTH | DAY | HOUR | MINUTE | SECOND | TIMEZONE_HOUR | TIMEZONE_MINUTE | TIMEZONE_REGION | TIMEZONE_ABBR } FROM { expr } )
        날짜 시간 또는 간격 표현식에서 지정된 날짜 시간 필드의 값을 추출


-- ------------------------------------------------
-- 변환 함수
   TO_NUMBER(expr [, fmt [, 'nlsparam' ] ])
        expr을 NUMBER 데이터 유형의 값으로 변환

   TO_CHAR(label [, fmt])
        datatype을 VARCHAR2 타입으로 변환

   TO_CHAR(날짜컬럼, 'YYYY-MM-DD')
   TO_CHAR(날짜컬럼, 'YYYY-MM-DD HH24:MI:SS')
        날짜를 VARCHAR2 타입으로 변환

   TO_DATE(char [, fmt [, 'nlsparams'] ])
        문자를 날짜로 변환
        TO_CHAR(날짜컬럼, 'YYYY-MM-DD')
        TO_CHAR(날짜컬럼, 'YYYY-MM-DD HH24:MI:SS')

   TO_CHAR(SYSTIMESTAMP, 'YYYY-MM-DD HH24:MI:SS.FF3')
        날짜(TIMESTAMP)를 VARCHAR2 타입으로 변환
   TO_TIMESTAMP(char [, fmt [, 'nlsparam' ] ])
        char을 TIMESTAMP 데이터 유형의 값으로 변환


-- ------------------------------------------------
-- NULL 관련 함수
   NVL(expr1, expr2)
        expr1이 Null 이면 expr2 반환하고 Null이 아니면 expr1 반환
   NVL2(expr1, expr2, expr3)
       expr1이 null이 아니면 expr2를 반환하고, null이면 expr3를 반환

