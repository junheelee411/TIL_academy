25.09.19. FRI

# 클래스 언제 로딩?
- 처음 객체 생성
- 처음 클래스 변수 사용
- 처음 클래스 메소드 사용


# 클래스가 처음 로딩될 때 실행하는 것
1) 클래스 변수의 메모리 할당 - 메소드 영역
2) 클래스 변수를 디폴트 값으로 초기화
3) 초기화 변수의 수식을 실행
4) static 블럭이 존재하면 실행

# 객체를 생성할 때마다 실행
1) new Test9() 인스턴스 변수의 메모리 할당
2) 모든 인스턴스 변수를 디폴트 값으로 초기화
3) 초기화 수식
4) 초기화 블럭 존재하면 실행
5) 생성자의 몸체를 실행
 (1) 생성자 몸체의 첫 번째 문장 super([인수]) 또는 this([인수]) 실행
 (2) 생성자 몸체 실행

# 생성자는 여러번 호출될 수 있기 때문에 final static 변수 초기화 불가
# final 변수는 변경 불가
# 일반 메소드에서는 final 인스턴스 변수 초기화 불가
final 인스턴스 변수 : 선얼할 때 초기화하거나 생성자에서 초기화
final 인스턴스 변수가 생성될 때 한 번만 초기화 가능

# 자바의 최상위 클래스 : object

# import
- 외부 클래스를 현재 클래스에서 사용할 수 있게 함

# 자동 import
- <Ctrl> + <Shift> + <o>

# 패키지의 모든 클래스 임포트
- import java.패키지명.*; 

# 주소 비교
==
object equals
# 값비교
string equals(오버라이딩)

# 추상클래스
-객체 생성 못함
- 미완성된 클래스
-자식 클래스가 구현 의무를 가짐

# 16진수 형식의 문자열을 정수로 변환
a=Integer.parseInt("b1",16); //177

# 정수를 String으로 변환
a=123;
s1=Integer.toString(a);
