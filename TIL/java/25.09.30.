# Set
-순서를 유지하지 않는 데이터의 집합
-중복을 허용하지 않는다.
-하나의 null만 저장할 수 있다.

## 구현 클래스

### HashSet
- set 인터페이스를 구현한 클래스
-요소의 저장 순서가 유지 되지 않는다.
- 멀티 쓰레드 환경에서 동기화되지 않는다.

### LinkedHashset
- Hashset 하위 클래스
- 해쉬 테이블과 링크드 리스트를 구현한 Set
- 추가하는 순서로 저장된다.
- 멀티 쓰레드 환경에서 동기화 되지 않는다.

### TreeSet
- SortedSet 인터페이스를 구현한 클래스
- 정렬된 순서에 의해 반복
- 요소의 중복을 허용하지 않는다.
- 멀티 쓰레드 환경에서 동기화되지 않느다.
- Comparable 인터페이스 구현한 클래스만 추가 가능

# Map
- 키, 값 구조
- 키는 중복을 허용하지 않음
- 키는 순서가 없음
- 키는 변경 불가, 변경할 경우 삭제 후 다시 등록
- 값은 replace(키,값)으로 변경 가능

## 주요 메소드
- get(키) : 키에 대한 값 반환
- put(키,값) : 키에 대한 Set객체 반환
- KeySet() : 키에 대한 Set 객체 반환
- size() :

## 구현 클래스
HashMap
-동기화 지원하지 않음
HashTable
-동기화 지원
LinkedHashMap
- 키가 등록된 순서 유지
TreeMap
- 키 순서로 정렬. 키는 Comparable 인터페이스 구현한 클래스만 가능

# Properties
- Hashtable 클래스를 상속 받음
- 키와 값 모두 문자열(String)만 가능
- 파일 저장 및 불러오기가 간단해서 환경 설정 등에서 많이 사용
- 순서 x

# fileInputstream
- 파일 입력 byte stream
- 파일이 존재하지 않으면 FileNotFoundException이 발생
- (ex) buffer)

# Properties
- Hashtable 클래스를 상속 받음
- 키와 값 모두 문자열(String)만 가능
- 파일 저장 및 불러오기가 간단해서 환경 설정 등에서 많이 사용
- 순서 x
- 절대경로(상대경로 사용 불가)

# priorityQueue
- 우선 순위 큐
- Comparable 인터페이스가 구현된 클래스만 가능
- 먼저 생성된 포인터를 먼저 사용하는 로직 등에서 사용 가능
